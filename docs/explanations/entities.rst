.. _entities:

Entity and Entity Instance
==========================

An Entity represents any piece of functionality of an IOC that can be
configured through database and/or startup script.

Declaring entities and how to configure those Entities is the job of the
**ibek support module yaml file**. The global schema for this file is provided
by ibek with the command ``ibek ibek-schema``.

Expand below for the global schema and an example support module YAML file:

    .. raw:: html

        <details>
        <summary><a>ibek.schema.json</a></summary>

    .. include:: ../../tests/samples/schemas/ibek.schema.json
        :literal:

    .. raw:: html

        </details>

    .. raw:: html

        <details>
        <summary><a>pmac.ibek.yaml</a></summary>

    .. include:: ../../tests/samples/yaml/pmac.ibek.yaml
        :literal:

    .. raw:: html

        </details>

Making use of these entities to describe an IOC instance is the job
of an **ibek ioc description YAML file**. The schema for this file is
extracted with the command ``ibek ioc-schema <IBEK_SUPPORT_MODULE_YAML> <OUTPUT_SCHEMA_JSON>``.

Expand below for example ioc description YAML:

    .. raw:: html

        <details>
        <summary><a>bl45p-mo-ioc-02.pmac.yaml</a></summary>

    .. include:: ../../tests/samples/yaml/bl45p-mo-ioc-02.pmac.yaml
        :literal:

    .. raw:: html

        </details>

Once you have an **ibek ioc description YAML file** you can generate ioc
code in the form of a helm chart with the command
``ibek build-ioc <IBEK_IOC_DESCRIPTION_YAML>``


To understand the code behind these steps it is
important to understand the relationship between the classes and instances
of Entity and EntityInstance subclasses.

- The Entity Class (plus its members' classes: Database, Arg and arg types)

  - generates the global schema file **ibek.schema.json**
  - determines what a **support module YAML file** may look like

- Entity Class instances

  - defined by deserialising a **support module YAML file**.
  - generate a **support module schema JSON file**
  - generate a set of in memory EntityInstance Classes

- EntityInstance Classes

  - generated by the previous step
  - determine what an **IOC definition YAML file** may look like
  - each hold a reference to the Entity Class instance that generated them

- EntityInstance class instances

  - defined in an **IOC definition YAML file**
  - hold a values for each of the args
  - generate the ioc helm chart by combining

    - the arg values
    - the database and script templates from their Entity Class instance

